version: 2
jobs:
  build:
    docker:
      - image: circleci/node:7.10
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run: 
          name: 의존성 모듈을 모두 설치합니다.
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: 
          name: 테스트 코드를 실행합니다.
          command: npm run test
  test0:
    docker:
      - image: circleci/node:7.10
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: A를 외칩니다.
          command: echo A
  test1:
    docker:
      - image: circleci/node:7.10
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: B를 외칩니다.
          command: echo B
  test2:
    docker:
      - image: circleci/node:7.10
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: C를 외칩니다.
          command: echo C
  test3:
    docker:
      - image: circleci/node:7.10
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: D를 외치고 NPM 버전 확인과 디렉토리 내부 구조 확인
          command: |
            echo D
            npm -v
            ls
workflows:
  version: 2
  app_commit:
    jobs:
      - build
  requires_test_A:
    jobs:
      - test0:
          filters:
            branches:
              only: 
                - requires
      - test1:
          requires:
            - test0
      - test2:
          requires:
            - test1
      - test3:
          requires:
            - test2
  requires_test_B:
    jobs:
      - test0:
          filters:
            branches:
              only: 
                - requires
      - test1:
          requires:
            - test0
      - test2:
          requires:
            - test0
      - test3:
          requires:
            - test0
            - test1
            - test2